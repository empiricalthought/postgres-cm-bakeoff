#! /bin/sh
### BEGIN INIT INFO
# Provides:          pg_wal_receiver
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     
# Default-Stop:      
# Short-Description: Receive PostgreSQL transaction logs
# Description:       Receive PostgreSQL transaction logs
#                    This allows archiving to be started as a daemon
### END INIT INFO

. /lib/lsb/init-functions

NAME=pg_wal_receiver
DAEMON=/usr/bin/pg_receivexlog
PIDFILE=/var/run/pg_wal_receiver.pid
DAEMON_OPTS="-D /data/wal_archive -U rep -h primary.vagrant.dev -v -w"
LOGFILE=/var/log/postgresql/pg_wal_receiver.log

test -x $DAEMON || exit 5

case $1 in
    start)
        if [ -e $PIDFILE ]
        then
            status_of_proc -p $PIDFILE $DAEMON "$NAME" && status="0" || status="$?"
            if [ $status = "0" ]
            then
                exit
            fi
        fi
        log_daemon_msg "Starting" "$NAME"
        if start-stop-daemon --chuid postgres:postgres --start --quiet \
                             --background --make-pidfile --oknodo \
                             --pidfile $PIDFILE --startas /bin/sh \
                             -- -c "exec $DAEMON $DAEMON_OPTS > $LOGFILE 2>&1"
        then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
    stop)
        if [ -e $PIDFILE ]
        then
            log_daemon_msg "Stopping" "$NAME"
            status_of_proc -p $PIDFILE $DAEMON "$NAME" && status="0" || status="$?"
            if [ -e $PIDFILE ]
            then
                start-stop-daemon --chuid postgres:postgres --stop --quiet \
                                  --oknodo --pidfile $PIDFILE
                /bin/rm -rf $PIDFILE
            fi
        else
            log_daemon_msg "$NAME is not running"
            log_end_msg 0
        fi
        ;;
    restart)
        $0 stop && sleep 2 && $0 start
        ;;
    status)
        if [ -e $PIDFILE ]
        then
            status_of_proc -p $PIDFILE $DAEMON "$NAME" && exit 0 || exit $?
        else
            log_daemon_msg "$NAME is not running"
            log_end_msg
        fi
        ;;
    reload)
        if [ -e $PIDFILE ]
        then
            start-stop-daemon --chuid postgres:postgres --stop --signal USR1 \
                              --quiet --pidfile $PIDFILE --name $NAME
            log_success_msg "$NAME reloaded successfully"
        else
            log_failure_msg "$PIDFILE does not exist"
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|status}"
        exit 2
esac
